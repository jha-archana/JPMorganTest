package com.jpmorgan.codingtest.developerTest.domain;

import java.util.List;

public class Position implements Comparable<Position>{
	
	private String account;
	private String instrument;
	private Integer quantity;
	private StringBuffer trades;
	
	public Position(){
		
	}
	
	public Position(String account, String instrument, Integer quantity, StringBuffer trades){
		this.account= account;
		this.instrument=instrument;
		this.quantity=quantity;
		this.trades=trades;
		
	}
	
	public String getAccount() {
		return account;
	}
	public void setAccount(String account) {
		this.account = account;
	}
	public String getInstrument() {
		return instrument;
	}
	public void setInstrument(String instrument) {
		this.instrument = instrument;
	}
	public Integer getQuantity() {
		return quantity;
	}
	public void setQuantity(Integer quantity) {
		this.quantity = quantity;
	}
	public StringBuffer getTrades() {
		return trades;
	}
	public void setTrades(StringBuffer trades) {
		this.trades = trades;
	}

	@Override
	public int compareTo(Position position){
	  return this.account.compareTo(position.account);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((account == null) ? 0 : account.hashCode());
		result = prime * result + ((instrument == null) ? 0 : instrument.hashCode());
		result = prime * result + ((quantity == null) ? 0 : quantity.hashCode());
		result = prime * result + ((trades == null) ? 0 : trades.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Position other = (Position) obj;
		if (account == null) {
			if (other.account != null)
				return false;
		} else if (!account.equals(other.account))
			return false;
		if (instrument == null) {
			if (other.instrument != null)
				return false;
		} else if (!instrument.equals(other.instrument))
			return false;
		if (quantity == null) {
			if (other.quantity != null)
				return false;
		} else if (!quantity.equals(other.quantity))
			return false;
		if (trades == null) {
			if (other.trades != null)
				return false;
		} else if (!trades.equals(other.trades))
			return false;
		return true;
	}
	
	
}
