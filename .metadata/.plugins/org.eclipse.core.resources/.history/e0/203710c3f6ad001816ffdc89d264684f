package com.jpmorgan.codingtest.developerTest.domain;

import com.poiji.annotation.ExcelCellName;

public class TradeEvent implements Comparable<TradeEvent>{

	@ExcelCellName("TradeID") 
	private Integer tradeId;
	
	@ExcelCellName("Version")
	private Integer tradeVersion;
	
	@ExcelCellName("Security Identifier")
	private String tradeSecurity;
	
	@ExcelCellName("Trade quantity")
	private Integer quantity;
	
	@ExcelCellName("Trade Direction")
	private String tradeDirection;
	
	@ExcelCellName("Account")
	private String accountNumber;
	
	@ExcelCellName("Operation")
	private String operation;
	
	
	public Integer getTradeId() {
		return tradeId;
	}
	public void setTradeId(Integer tradeId) {
		this.tradeId = tradeId;
	}
	public Integer getTradeVersion() {
		return tradeVersion;
	}
	public void setTradeVersion(Integer tradeVersion) {
		this.tradeVersion = tradeVersion;
	}
	public String getTradeSecurity() {
		return tradeSecurity;
	}
	public void setTradeSecurity(String tradeSecurity) {
		this.tradeSecurity = tradeSecurity;
	}
	public Integer getQuantity() {
		return quantity;
	}
	public void setQuantity(Integer quantity) {
		this.quantity = quantity;
	}
	public String getTradeDirection() {
		return tradeDirection;
	}
	public void setTradeDirection(String tradeDirection) {
		this.tradeDirection = tradeDirection;
	}
	public String getAccountNumber() {
		return accountNumber;
	}
	public void setAccountNumber(String accountNumber) {
		this.accountNumber = accountNumber;
	}
	public String getOperation() {
		return operation;
	}
	public void setOperation(String operation) {
		this.operation = operation;
	}
	
	@Override
	public int compareTo(TradeEvent tradeEvent){
	  int result=-1;

	  result = this.accountNumber.compareTo(tradeEvent.accountNumber); 
	  if (result != 0)                              
	  {
	    return result;                              
	  }

	  result = this.tradeSecurity.compareTo(tradeEvent.tradeSecurity);
	  if (result != 0)                              
	  {
	    return result;                              
	  }
	  
	  result = this.tradeId.compareTo(tradeEvent.tradeId);
	  if (result != 0)                              
	  {
	    return result;                              
	  }
	  
	  result = this.tradeVersion.compareTo(tradeEvent.tradeVersion);
	  if (result != 0)                              
	  {
	    return result;                              
	  }
	  
	  return result;

	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((accountNumber == null) ? 0 : accountNumber.hashCode());
		result = prime * result + ((tradeId == null) ? 0 : tradeId.hashCode());
		result = prime * result + ((tradeSecurity == null) ? 0 : tradeSecurity.hashCode());
		result = prime * result + ((tradeVersion == null) ? 0 : tradeVersion.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TradeEvent other = (TradeEvent) obj;
		if (accountNumber == null) {
			if (other.accountNumber != null)
				return false;
		} else if (!accountNumber.equals(other.accountNumber))
			return false;
		if (tradeId == null) {
			if (other.tradeId != null)
				return false;
		} else if (!tradeId.equals(other.tradeId))
			return false;
		if (tradeSecurity == null) {
			if (other.tradeSecurity != null)
				return false;
		} else if (!tradeSecurity.equals(other.tradeSecurity))
			return false;
		if (tradeVersion == null) {
			if (other.tradeVersion != null)
				return false;
		} else if (!tradeVersion.equals(other.tradeVersion))
			return false;
		return true;
	}
	
	
	
	

}
